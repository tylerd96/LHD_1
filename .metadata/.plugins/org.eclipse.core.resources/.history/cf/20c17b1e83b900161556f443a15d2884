import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;

import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game  extends JPanel{
	
	ArrayList<Character> characters = new ArrayList<Character>();
	private JFrame window = new JFrame("Meme lord 5000");
	BufferedImage[] sprites;
	
	
	public Game() {
		window.setBounds(100,100,500,700);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(this);
		window.setVisible(true);
		window.addKeyListener(new KeyListener() {

			@Override
			public void keyTyped(KeyEvent e) {}

			@Override
			public void keyPressed(KeyEvent e) {
				int kc = e.getKeyCode();
				
				switch(kc) {
				case KeyEvent.VK_W: startMove(Direction.UP); 	repaint(); break;
				case KeyEvent.VK_A: startMove(Direction.LEFT); 	repaint(); break;
				case KeyEvent.VK_S: startMove(Direction.DOWN); 	repaint(); break;
				case KeyEvent.VK_D: startMove(Direction.RIGHT); repaint(); break;
				}
				
			}

			@Override
			public void keyReleased(KeyEvent e) {}
			
		});
		loadLevel();
		
	}
	public void startMove(Direction dir) {
		for(Character c : characters) {
			if(c instanceof Pacman) {
				c.setDx(dir.getDeltaCol());
				c.setDy(dir.getDeltaRow());
			}
		}
	}
	@Override
	public void paint(Graphics g) {
		super.paint(g);
		for(Character c : characters) {
			c.move();
		}
		super.paint(g);
	}
	public void loadLevel() {
		loadImages();
		characters.add(new Pacman(0,0,sprites[(spriteRdr.PACMAN.row*sprites.length) + spriteRdr.PACMAN.col]));
	}
	public void loadImages() {
		try {
			BufferedImage bigImage = ImageIO.read(new File("spriteSheet.png"));
			final int size = 20;
			final int rows = 16;
			final int cols = 21;
			sprites = new BufferedImage[rows*cols];
			for(int i = 0; i<rows; i++) {
				for(int j = 0; j<cols; j++) {
					sprites[(i*cols)+j] = bigImage.getSubimage(j*size, i*size, size, size);
				}
			}
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("here");
			e.printStackTrace();
		}
		
	}
	public static void main(String args[]) {
		new Game();
	}
}
